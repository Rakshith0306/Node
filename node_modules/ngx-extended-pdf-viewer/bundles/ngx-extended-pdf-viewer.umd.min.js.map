{"version":3,"sources":["ng://ngx-extended-pdf-viewer/lib/default-options.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.component.ts","ng://ngx-extended-pdf-viewer/lib/ResponsiveCSSSimulation.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.service.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.module.ts"],"names":["defaultOptions","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePrintAutoRotate","enableWebGL","eventBusDispatchToDOM","externalLinkRel","externalLinkTarget","historyUpdateUrl","imageResourcesPath","maxCanvasPixels","pdfBugEnabled","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableCreateObjectURL","disableFontFace","disableRange","disableStream","isEvalSupported","maxImageSize","pdfBug","postMessageTransfers","verbosity","workerPort","workerSrc","NgxExtendedPdfViewerComponent","Object","defineProperty","prototype","url","Uint8Array","this","_src","buffer","Blob","URL","createObjectURL","length","test","console","warn","base64","binary_string","window","atob","len","bytes","i","charCodeAt","src","_height","h","_this","minHeight","undefined","height","setTimeout","checkHeight","_showSidebarButton","show","factor","navigator","userAgent","Number","_mobileFriendlyZoom","replace","findbarLeft","toString","zoom","String","includes","mobileFriendlyZoomScale","toolbarWidth","showSidebarButton","secondaryToolbarTop","findbarTop","mobileFriendlyZoom","_top","endsWith","substring","calcViewerPositionTop","viewerPositionTop","isPrimaryMenuVisible","emitZoomChange","selectedIndex","sizeSelector","nativeElement","s","options","value","label","zoomChange","emit","emitZoomChangeAfterDelay","ngOnInit","ignoreResponsiveCSS","pdfViewer","document","getElementsByClassName","toolbar_1","width","clientWidth","innerWidth","langLinks","querySelectorAll","querySelector","useBrowserLocale","error","o","attributes","callback","e","removeEventListener","initTimeout","openPDF","delayFirstView","addEventListener","event","afterPrint","beforePrint","ngxExtendedPdfViewerInitialized","onLoaded","overrideDefaultSettings","primaryMenuVisible","isSecondaryMenuVisible","showSecondaryToolbarButton","webViewerLoad","PDFViewerApplication","appConfig","filenameForDownload","PDFViewerApplicationOptions","set","language","isViewerEmbedded","printKeyDownListener","pc","getElementById","getElementsByTagName","appendChild","container","clientHeight","mh","innerHeight","getBoundingClientRect","top","onPageChange","inputField","page","isNaN","pageChange","onSpreadChange","newSpread","spreadChange","key","setZoom","handTool","showHandToolButton","sidebarVisible","showSidebarOnLoad","spread","spreadMode","printResolution","onResize","listenToURL","pdfLinkService","setHash","selectCursorTool","eventBus","on","x","pagesLoaded","rotation","r","pagesRotation","nameddest","navigateTo","ngZone","run","pageRendered","pdfDownloaded","currentZoomFactor","scale","rotationChange","path","fileInput","srcChange","handToolChange","tool","sidebarVisibleChange","view","password","open","then","pdfLoaded","pagesCount","pdfLoadingFailed","dispatch","ngOnDestroy","clearTimeout","app","cleanup","close","_boundEvents","unbindWindowEvents","bus","unbindEvents","_listeners","list","body","topLevelElements","children","item","id","removeChild","showPagingButtons","showPropertiesButton","showRotateButton","showScrollingButton","showSpreadButton","showBookmarkButton","showDownloadButton","showFindButton","showOpenFileButton","showPresentationModeButton","showPrintButton","showZoomButtons","ngOnChanges","changes","pdfSidebar","removeDynamicCSS","elt","forEach","c","parents","element","classList","remove","tinyElement","zoomAsNumber","currentScaleValue","resizeTimeout","doResize","resizeUpTo900px","add","resizeUpTo840px","resizeUpTo770px","hiddenLargeElements","visibleLargeElements","resizeUpTo700px","mediumElements","visibleMediumElements","resizeUpTo640px","smallElements","visibleSmallViewElements","toolbarButtonSpacer","findbar","resizeUpTo535px","tiny","onContextMenu","contextMenuAllowed","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","Output","Input","ViewChild","HostListener","EventEmitter","backgroundColor","NgxExtendedPdfViewerService","find","text","setAttribute","dispatchEvent","Event","findNext","button","click","findPrevious","Injectable","providedIn","NgxExtendedPdfViewerModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["export const defaultOptions = {\n  cursorToolOnLoad: 0,\n  defaultUrl: '',\n  defaultZoomValue: '',\n  disableHistory: false,\n  disablePageLabels: false,\n  enablePrintAutoRotate: false,\n  enableWebGL: false,\n  eventBusDispatchToDOM: false,\n  externalLinkRel: 'noopener noreferrer nofollow',\n  externalLinkTarget: 0,\n  historyUpdateUrl: false,\n  imageResourcesPath: './images/',\n  maxCanvasPixels: 16777216,\n  pdfBugEnabled: false,\n  renderer: 'canvas',\n  renderInteractiveForms: false,\n  sidebarViewOnLoad: -1,\n  scrollModeOnLoad: -1,\n  spreadModeOnLoad: -1,\n  textLayerMode: 1,\n  useOnlyCssZoom: false,\n  viewOnLoad: 0,\n  cMapPacked: true,\n  cMapUrl: '../web/cmaps/',\n  disableAutoFetch: false,\n  disableCreateObjectURL: false,\n  disableFontFace: false,\n  disableRange: false,\n  disableStream: false,\n  isEvalSupported: true,\n  maxImageSize: -1,\n  pdfBug: false,\n  postMessageTransfers: true,\n  verbosity: 1,\n  workerPort: null,\n  workerSrc: './assets/pdf.worker.js'\n};\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy,\n  HostListener,\n  NgZone\n} from '@angular/core';\nimport { PagesLoadedEvent } from './pages-loaded-event';\nimport { PageRenderedEvent } from './page-rendered-event';\nimport { PdfDownloadedEvent } from './pdf-downloaded-event';\nimport { PdfLoadedEvent } from './pdf-loaded-event';\nimport { defaultOptions } from './default-options';\nimport { ScaleChangingEvent } from './scale-changing-event';\nimport {\n  resizeUpTo900px,\n  resizeUpTo840px,\n  resizeUpTo770px,\n  resizeUpTo700px,\n  resizeUpTo640px,\n  resizeUpTo535px,\n  removeDynamicCSS\n} from './ResponsiveCSSSimulation';\nimport { PagesRotationEvent } from './pages-rotation-event';\nimport { FileInputChanged } from './file-input-changed';\nimport { SidebarviewChange } from './sidebarview-changed';\nimport { HandtoolChanged } from './handtool-changed';\n\n@Component({\n  selector: 'ngx-extended-pdf-viewer',\n  templateUrl: './ngx-extended-pdf-viewer.component.html',\n  styleUrls: ['./viewer-with-images-2.2.css', './ngx-extended-pdf-viewer.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxExtendedPdfViewerComponent implements OnInit, OnChanges, OnDestroy {\n  public static ngxExtendedPdfViewerInitialized = false;\n\n  private _src: string | ArrayBuffer;\n\n  @Output()\n  public srcChange = new EventEmitter<string>();\n\n  private resizeTimeout: any = null;\n\n  @Input()\n  public contextMenuAllowed = true;\n\n  @Output()\n  public afterPrint = new EventEmitter<void>();\n\n  @Output()\n  public beforePrint = new EventEmitter<void>();\n\n  @Output()\n  public currentZoomFactor = new EventEmitter<number>();\n\n  /**\n   * Number of milliseconds to wait between initializing the PDF viewer and loading the PDF file.\n   * Most users can let this parameter safely at it's default value of zero.\n   * Set this to 1000 or higher if you run into timing problems (typically caused by loading the locale files\n   * after the PDF files, so they are not available when the PDF viewer is initialized).\n   */\n  @Input()\n  public delayFirstView = 0;\n\n  @Input()\n  public ignoreResponsiveCSS: boolean | undefined = undefined;\n\n  /** store the timeout id so it can be canceled if user leaves the page before the PDF is shown */\n  private initTimeout: any;\n\n  public primaryMenuVisible = true;\n\n  /** option to increase (or reduce) print resolution. Default is 150 (dpi). Sensible values\n   * are 300, 600, and 1200. Note the increase memory consumption, which may even result in a browser crash. */\n  @Input()\n  public printResolution = null;\n\n  @Input()\n  public rotation: 0 | 90 | 180 | 270;\n\n  @Output()\n  public rotationChange = new EventEmitter<0 | 90 | 180 | 270>();\n\n  @Input()\n  public set src(url: string | ArrayBuffer | Uint8Array) {\n    if (url instanceof Uint8Array) {\n      this._src = (<Uint8Array>url).buffer;\n    } else if (url instanceof Blob) {\n      this._src = URL.createObjectURL(url);\n    } else if (typeof url === 'string') {\n      this._src = url;\n      if (url.length > 980) {\n        // minimal length of a base64 encoded PDF\n        if (url.length % 4 === 0) {\n          if (/^[a-zA-Z\\d\\/+]+={0,2}$/.test(url)) {\n            console.warn('The URL looks like a base64 encoded string. If so, please use the attribute base64 instead of src');\n          }\n        }\n      }\n    } else {\n      this._src = url;\n    }\n  }\n\n  @Input()\n  public set base64Src(base64: string) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    this.src = bytes.buffer;\n  }\n\n  public minHeight: string | undefined = undefined;\n\n  private _height = '100%';\n\n  @Input()\n  public set height(h: string) {\n    this.minHeight = undefined;\n    if (h) {\n      this._height = h;\n    } else {\n      this.height = '100%';\n    }\n    setTimeout(() => {\n      this.checkHeight();\n    });\n  }\n\n  public get height() {\n    return this._height;\n  }\n\n  /**\n   * If this flag is true, this components adds a link to the locale assets. The pdf viewer\n   * sees this link and uses it to load the locale files automatically.\n   * @param useBrowserLocale boolean\n   */\n  @Input()\n  public useBrowserLocale = false;\n\n  @Input()\n  public backgroundColor = '#e8e8eb';\n\n  /** Allows the user to define the name of the file after clicking \"download\" */\n  @Input()\n  public filenameForDownload = 'document.pdf';\n\n  /** Allows the user to put the viewer's svg images into an arbitrary folder */\n  @Input()\n  public imageResourcesPath = './assets/images/';\n\n  /** Override the default locale. This must be the complete locale name, such as \"es-ES\". The string is allowed to be all lowercase.\n   */\n  @Input()\n  public language: string | undefined = undefined;\n\n  /** By default, listening to the URL is deactivated because often the anchor tag is used for the Angular router */\n  @Input()\n  public listenToURL = false;\n\n  /** Navigate to a certain \"named destination\" */\n  @Input()\n  public nameddest: string | undefined = undefined;\n\n  /** allows you to pass a password to read password-protected files */\n  @Input()\n  public password: string | undefined = undefined;\n\n  public _showSidebarButton = true;\n\n  public viewerPositionTop = '32px';\n\n  public get showSidebarButton() {\n    return this._showSidebarButton;\n  }\n  @Input()\n  public set showSidebarButton(show: boolean) {\n    this._showSidebarButton = show;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((this._mobileFriendlyZoom || '100').replace('%', '')) / 100;\n    }\n\n    if (this._showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n  }\n\n  /** If [showSideBarButton]=\"true\", do you want the sidebar to be shown by default ([showSidebarOnLoad])=\"true\")\n   * or not? By default, this flag is undefined, telling the PDF viewer to use the last setting used with this particular\n   * document, or to hide the sidebar if the document is opened for the first time.\n   */\n  @Input()\n  public showSidebarOnLoad: boolean | undefined = undefined;\n\n  @Input()\n  public sidebarVisible: boolean | undefined = undefined;\n\n  @Output()\n  public sidebarVisibleChange = new EventEmitter<boolean>();\n\n  @Input()\n  public showFindButton = true;\n  @Input()\n  public showPagingButtons = true;\n  @Input()\n  public showZoomButtons = true;\n  @Input()\n  public showPresentationModeButton = false;\n  @Input()\n  public showOpenFileButton = true;\n  @Input()\n  public showPrintButton = true;\n  @Input()\n  public showDownloadButton = true;\n  @Input()\n  public showBookmarkButton = true;\n  @Input()\n  public showSecondaryToolbarButton = true;\n  @Input()\n  public showRotateButton = true;\n  @Input()\n  public handTool = true;\n  @Output()\n  public handToolChange = new EventEmitter<boolean>();\n  @Input()\n  public showHandToolButton = false;\n  @Input()\n  public showScrollingButton = true;\n  @Input()\n  public showSpreadButton = true;\n  @Input()\n  public showPropertiesButton = true;\n\n  @Input()\n  public spread: 'off' | 'even' | 'odd';\n\n  @Output()\n  public spreadChange = new EventEmitter<'off' | 'even' | 'odd'>();\n\n  @Input()\n  public page: number | undefined = undefined;\n\n  @Output()\n  public pageChange = new EventEmitter<number | undefined>();\n\n  @Output()\n  public pagesLoaded = new EventEmitter<PagesLoadedEvent>();\n\n  @Output()\n  public pageRendered = new EventEmitter<PageRenderedEvent>();\n\n  @Output()\n  public pdfDownloaded = new EventEmitter<PdfDownloadedEvent>();\n\n  @Output()\n  public pdfLoaded = new EventEmitter<PdfLoadedEvent>();\n\n  @Output()\n  public pdfLoadingFailed = new EventEmitter<Error>();\n\n  /** Legal values: undefined, 'auto', 'page-actual', 'page_fit', 'page-width', or '50' (or any other percentage) */\n  @Input()\n  public zoom: string | number | undefined = undefined;\n\n  @Output()\n  public zoomChange = new EventEmitter<string | number | undefined>();\n\n  /** This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").\n   */\n  @Input() _mobileFriendlyZoom = '100%';\n\n  public mobileFriendlyZoomScale = 1;\n\n  public toolbarWidth = '100%';\n\n  public secondaryToolbarTop: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public findbarTop: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public findbarLeft: string | undefined = undefined;\n\n  public get mobileFriendlyZoom() {\n    return this._mobileFriendlyZoom;\n  }\n  /**\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").\n   */\n  @Input()\n  public set mobileFriendlyZoom(zoom: string) {\n    // tslint:disable-next-line:triple-equals - the type conversion is intended\n    if (zoom == 'true') {\n      zoom = '150%';\n      // tslint:disable-next-line:triple-equals - the type conversion is intended\n    } else if (zoom == 'false') {\n      zoom = '100%';\n    }\n    this._mobileFriendlyZoom = zoom;\n    let factor = 1;\n    if (!String(zoom).includes('%')) {\n      zoom = 100 * Number(zoom) + '%';\n    }\n    factor = Number((zoom || '100').replace('%', '')) / 100;\n    this.mobileFriendlyZoomScale = factor;\n    this.toolbarWidth = (100 / factor).toString() + '%';\n    if (this.showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n    this.secondaryToolbarTop = (12 + 24 * factor).toString() + 'px';\n    this.findbarTop = (-6 + 42 * factor).toString() + 'px';\n  }\n\n  /** Deprecated. Please use [mobileFriendlyZoom] instead.\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileZoom(mobileFriendlyZoom: string) {\n    this.mobileFriendlyZoom = mobileFriendlyZoom;\n  }\n\n  @ViewChild('sizeSelector') sizeSelector: any;\n\n  private _top: string | undefined = undefined;\n\n  public get sidebarPositionTop(): string {\n    if (this._top) {\n      return this._top;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        return (16 + 0.16 * zoom).toString() + 'px';\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        return this.mobileFriendlyZoom;\n      }\n      return (16 + 0.16 * Number(this.mobileFriendlyZoom)).toString() + 'px';\n    }\n    return '32px';\n  }\n  public calcViewerPositionTop(): void {\n    if (this._top) {\n      this.viewerPositionTop = this._top;\n      return;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        if (!this.isPrimaryMenuVisible()) {\n          this.viewerPositionTop = '0';\n        } else {\n          this.viewerPositionTop = (1 + 0.32 * zoom).toString() + 'px';\n        }\n        return;\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        this.viewerPositionTop = this.mobileFriendlyZoom;\n        return;\n      }\n    }\n    if (this.isPrimaryMenuVisible()) {\n      this.viewerPositionTop = '32px';\n    } else {\n      this.viewerPositionTop = '0';\n    }\n  }\n\n  constructor(private ngZone: NgZone) {}\n\n  public emitZoomChange(): void {\n    const selectedIndex = this.sizeSelector.nativeElement.selectedIndex;\n    if (selectedIndex || selectedIndex === 0) {\n      const s = this.sizeSelector.nativeElement.options[selectedIndex] as HTMLOptionElement;\n      let value: number | string = s.label;\n\n      if (value.endsWith('%')) {\n        value = Number(value.replace('%', ''));\n      } else {\n        value = s.value;\n      }\n      this.zoomChange.emit(value);\n    }\n  }\n\n  public emitZoomChangeAfterDelay(): void {\n    setTimeout(() => {\n      this.emitZoomChange();\n    }, 10);\n  }\n\n  ngOnInit() {\n    if (this.ignoreResponsiveCSS === undefined) {\n      const pdfViewer = document.getElementsByClassName('html');\n      if (pdfViewer && pdfViewer.length > 0) {\n        const toolbar = pdfViewer[0].getElementsByClassName('toolbar');\n        if (toolbar && toolbar.length > 0) {\n          const width = toolbar[0].clientWidth;\n          if (window.innerWidth - width > 50) {\n            this.ignoreResponsiveCSS = true;\n          } else {\n            this.ignoreResponsiveCSS = false;\n          }\n        }\n      }\n    }\n    const langLinks = document.querySelectorAll('link[type=\"application/l10n\"]');\n    const langCount = langLinks.length;\n\n    if (langCount === 0) {\n      const dict = document.querySelector('script[type=\"application/l10n\"]');\n      if (!dict) {\n        if (!this.useBrowserLocale) {\n          console.error(\n            \"If you set the attribute 'useBrowserLocale' to false, you must provide the translations yourself in a script or link tag.\"\n          );\n          console.error('The easiest way to do this is to add them to the index.html.');\n        }\n      } else if (this.useBrowserLocale) {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    } else if (this.useBrowserLocale) {\n      const o = langLinks[0].attributes['origin'];\n      if (o && o.value !== 'ngx-extended-pdf-viewer') {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    }\n    const callback = e => {\n      document.removeEventListener('localized', callback);\n      this.initTimeout = setTimeout(() => {\n        this.openPDF();\n      }, this.delayFirstView);\n    };\n\n    window.addEventListener('afterprint', event => {\n      this.afterPrint.emit();\n    });\n\n    window.addEventListener('beforeprint', event => {\n      this.beforePrint.emit();\n    });\n\n    document.addEventListener('localized', callback);\n\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"You're trying to open two instances of the PDF viewer. Most likely, this will result in errors.\");\n    }\n    const onLoaded = () => {\n      this.overrideDefaultSettings();\n      document.removeEventListener('webviewerloaded', onLoaded);\n    };\n    document.addEventListener('webviewerloaded', onLoaded);\n\n    setTimeout(() => {\n      // This initializes the webviewer, the file may be passed in to it to initialize the viewer with a pdf directly\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n      (<any>window).webViewerLoad();\n      (<any>window).PDFViewerApplication.appConfig.defaultUrl = ''; // IE bugfix\n      (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      (<any>window).PDFViewerApplicationOptions.set('locale', this.language);\n      (<any>window).PDFViewerApplicationOptions.set('imageResourcesPath', this.imageResourcesPath);\n\n      (<any>window).PDFViewerApplication.isViewerEmbedded = true;\n      window.addEventListener('keydown', (<any>window).PDFViewerApplication.printKeyDownListener, true);\n\n      const pc = document.getElementById('printContainer');\n      if (pc) {\n        document.getElementsByTagName('body')[0].appendChild(pc);\n      }\n    }, 0);\n  }\n\n  public checkHeight(): void {\n    const container = document.getElementsByClassName('zoom')[0];\n    if (container.clientHeight === 0 && this._height.includes('%')) {\n      const available = window.innerHeight;\n      const rect = container.getBoundingClientRect();\n      const top = rect.top;\n      let mh = available - top;\n      const factor = Number(this._height.replace('%', ''));\n      mh = (mh * factor) / 100;\n      if (mh > 100) {\n        this.minHeight = mh + 'px';\n      } else {\n        this.minHeight = '100px';\n      }\n    }\n  }\n\n  public onPageChange(): void {\n    setTimeout(() => {\n      const inputField = document.getElementById('pageNumber') as HTMLInputElement;\n      let page: number | undefined = Number(inputField.value);\n      if (isNaN(page)) {\n        page = undefined;\n      }\n      this.pageChange.emit(page);\n    });\n  }\n\n  public onSpreadChange(newSpread: 'off' | 'even' | 'odd'): void {\n    this.spreadChange.emit(newSpread);\n  }\n\n  private overrideDefaultSettings() {\n    const options = (<any>window).PDFViewerApplicationOptions;\n    // tslint:disable-next-line:forin\n    for (const key in defaultOptions) {\n      options.set(key, defaultOptions[key]);\n    }\n    options.set('disablePreferences', true);\n    this.setZoom();\n\n    if (!this.handTool) {\n      options.set('textLayerMode', 1);\n    } else {\n      options.set('textLayerMode', this.showHandToolButton ? 1 : 0);\n    }\n\n    let sidebarVisible = this.sidebarVisible;\n    if (sidebarVisible === undefined) {\n      sidebarVisible = this.showSidebarOnLoad;\n    }\n    if (this.sidebarVisible !== undefined) {\n      (<any>window).PDFViewerApplication.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n      if ((<any>window).PDFViewerApplication.appConfig) {\n        (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n      }\n      options.set('sidebarViewOnLoad', this.showSidebarOnLoad ? 1 : 0);\n    }\n    if (this.spread === 'even') {\n      options.set('spreadModeOnLoad', 2);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n      }\n      this.onSpreadChange('even');\n    } else if (this.spread === 'odd') {\n      options.set('spreadModeOnLoad', 1);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n      }\n      this.onSpreadChange('odd');\n    } else {\n      options.set('spreadModeOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n      }\n      this.onSpreadChange('off');\n    }\n    if (this.printResolution) {\n      options.set('printResolution', this.printResolution);\n    }\n  }\n\n  private openPDF() {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = true;\n    this.onResize();\n    if (!this.listenToURL) {\n      (<any>window).PDFViewerApplication.pdfLinkService.setHash = function() {};\n    }\n    this.initTimeout = null;\n    this.selectCursorTool();\n    (<any>window).PDFViewerApplication.eventBus.on('pagesloaded', (x: PagesLoadedEvent) => {\n      this.pagesLoaded.emit(x);\n      if (this.rotation) {\n        const r = Number(this.rotation);\n        if (r === 0 || r === 90 || r === 180 || r === 270) {\n          (<any>window).PDFViewerApplication.pdfViewer.pagesRotation = r;\n        }\n      } else {\n        (<any>window).PDFViewerApplication.pdfViewer.pagesRotation = 0;\n      }\n      setTimeout(() => {\n        if (this.nameddest) {\n          (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n        } else if (this.page) {\n          (<any>window).PDFViewerApplication.page = this.page;\n        }\n      });\n      this.setZoom();\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('pagerendered', (x: PageRenderedEvent) => {\n      this.ngZone.run(() => {\n        this.pageRendered.emit(x);\n      });\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('download', (x: PdfDownloadedEvent) => {\n      this.ngZone.run(() => {\n        this.pdfDownloaded.emit(x);\n      });\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('scalechanging', (x: ScaleChangingEvent) => {\n      this.ngZone.run(() => {\n        this.currentZoomFactor.emit(x.scale);\n      });\n    });\n\n    (<any>window).PDFViewerApplication.eventBus.on('rotationchanging', (x: PagesRotationEvent) => {\n      this.ngZone.run(() => {\n        this.rotationChange.emit(x.pagesRotation);\n      });\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('fileinputchange', (x: FileInputChanged) => {\n      this.ngZone.run(() => {\n        const path = x.fileInput.value.replace('C:\\\\fakepath\\\\', '');\n        this.srcChange.emit(path);\n      });\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('cursortoolchanged', (x: HandtoolChanged) => {\n      this.ngZone.run(() => {\n        this.handToolChange.emit(x.tool === 1);\n      });\n    });\n\n    (<any>window).PDFViewerApplication.eventBus.on('sidebarviewchanged', (x: SidebarviewChange) => {\n      this.ngZone.run(() => {\n        this.sidebarVisibleChange.emit(x.view === 1);\n      });\n    });\n\n    this.checkHeight();\n    // open a file in the viewer\n    if (!!this._src) {\n      const options = {\n        password: this.password\n      };\n      (<any>window).PDFViewerApplication.open(this._src, options).then(\n        () => this.pdfLoaded.emit({ pagesCount: (<any>window).PDFViewerApplication.pagesCount }),\n        (error: Error) => this.pdfLoadingFailed.emit(error)\n      );\n    }\n    setTimeout(() => {\n      if (this.page) {\n        (<any>window).PDFViewerApplication.page = this.page;\n      }\n    }, 100);\n  }\n\n  private selectCursorTool() {\n    (<any>window).PDFViewerApplication.eventBus.dispatch('switchcursortool', { tool: this.handTool ? 1 : 0 });\n  }\n\n  public ngOnDestroy(): void {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = false;\n    if (this.initTimeout) {\n      clearTimeout(this.initTimeout);\n      this.initTimeout = undefined;\n    }\n    const app = (<any>window).PDFViewerApplication;\n    if (app) {\n      app.cleanup();\n      app.close();\n      if ((<any>window).PDFViewerApplication.printKeyDownListener) {\n        (<any>window).removeEventListener('keydown', (<any>window).PDFViewerApplication.printKeyDownListener, true);\n      }\n      if (app._boundEvents) {\n        app.unbindWindowEvents();\n      }\n      const bus = app.eventBus as any;\n      if (bus) {\n        app.unbindEvents();\n        for (const key in bus._listeners) {\n          if (bus._listeners[key]) {\n            const list = bus._listeners[key];\n            // not sure if the for loop is necessary - but\n            // it might improve garbage collection if the \"listeners\"\n            // array is stored somewhere else\n            for (let i = 0; i < list.length; i++) {\n              list[i] = undefined;\n            }\n            bus._listeners[key] = undefined;\n          }\n        }\n      }\n      app.eventBus = null;\n    }\n\n    const body = document.getElementsByTagName('body');\n    if (body[0]) {\n      const topLevelElements = body[0].children;\n      for (let i = topLevelElements.length - 1; i >= 0; i--) {\n        const e = topLevelElements.item(i);\n        if (e && e.id === 'printContainer') {\n          body[0].removeChild(e);\n        } else if (e && e.id === 'fileInput') {\n          body[0].removeChild(e);\n        }\n      }\n    }\n  }\n\n  private isSecondaryMenuVisible(): boolean {\n    const visible =\n      this.showHandToolButton ||\n      this.showPagingButtons ||\n      this.showPropertiesButton ||\n      this.showRotateButton ||\n      this.showScrollingButton ||\n      this.showRotateButton ||\n      this.showSpreadButton;\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private isPrimaryMenuVisible(): boolean {\n    const visible =\n      this.showBookmarkButton ||\n      this.showDownloadButton ||\n      this.showFindButton ||\n      this.showOpenFileButton ||\n      this.showPagingButtons ||\n      this.showPresentationModeButton ||\n      this.showPrintButton ||\n      this.showPropertiesButton ||\n      this.showSidebarButton ||\n      this.showSecondaryToolbarButton ||\n      this.showZoomButtons;\n\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      if ('src' in changes || 'base64Src' in changes) {\n        if (!!this._src) {\n          this.overrideDefaultSettings();\n          (<any>window).PDFViewerApplication.open(this._src).then(\n            () => this.pdfLoaded.emit({ pagesCount: (<any>window).PDFViewerApplication.pagesCount }),\n            (error: Error) => this.pdfLoadingFailed.emit(error)\n          );\n        }\n      }\n      if ('zoom' in changes) {\n        this.setZoom();\n      }\n\n      if ('handTool' in changes) {\n        this.selectCursorTool();\n      }\n      if ('page' in changes) {\n        if (this.page) {\n          (<any>window).PDFViewerApplication.page = this.page;\n        }\n      }\n\n      if ('rotation' in changes) {\n        if (this.rotation) {\n          const r = Number(this.rotation);\n          if (r === 0 || r === 90 || r === 180 || r === 270) {\n            (<any>window).PDFViewerApplication.pdfViewer.pagesRotation = r;\n          }\n        } else {\n          (<any>window).PDFViewerApplication.pdfViewer.pagesRotation = 0;\n        }\n      }\n      if ('sidebarVisible' in changes) {\n        if (this.sidebarVisible) {\n          (<any>window).PDFViewerApplication.pdfSidebar.open();\n        } else {\n          (<any>window).PDFViewerApplication.pdfSidebar.close();\n        }\n      }\n      if ('filenameForDownload' in changes) {\n        (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      }\n      if ('nameddest' in changes) {\n        if (this.nameddest) {\n          (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n        }\n      }\n\n      if ('spread' in changes) {\n        if (this.spread === 'even') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 2;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n          this.onSpreadChange('even');\n        } else if (this.spread === 'odd') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 1;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n          this.onSpreadChange('odd');\n        } else {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 0;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n          this.onSpreadChange('off');\n        }\n      }\n\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n    }\n    if ('ignoreResponsiveCSS' in changes) {\n      if (this.ignoreResponsiveCSS) {\n        this.onResize();\n      } else {\n        removeDynamicCSS();\n      }\n    }\n    if ('printResolution' in changes) {\n      const options = (<any>window).PDFViewerApplicationOptions;\n      if (options) {\n        options.set('printResolution', this.printResolution);\n      }\n    }\n  }\n\n  private setZoom() {\n    let zoomAsNumber = this.zoom;\n    if (String(zoomAsNumber).endsWith('%')) {\n      zoomAsNumber = Number(String(zoomAsNumber).replace('%', '')) / 100;\n    } else if (!isNaN(Number(zoomAsNumber))) {\n      zoomAsNumber = Number(zoomAsNumber) / 100;\n    }\n    if (!zoomAsNumber) {\n      zoomAsNumber = 'auto';\n    }\n    if ((<any>window).PDFViewerApplication) {\n      (<any>window).PDFViewerApplicationOptions.set('defaultZoomValue', zoomAsNumber);\n    }\n    if ((<any>window).PDFViewerApplication.pdfViewer) {\n      (<any>window).PDFViewerApplication.pdfViewer.currentScaleValue = zoomAsNumber;\n    }\n  }\n\n  public onResize(): void {\n    if (this.ignoreResponsiveCSS) {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.doResize, 100);\n    }\n  }\n\n  private doResize(): void {\n    const pdfViewer = document.getElementsByClassName('html');\n    if (pdfViewer && pdfViewer.length > 0) {\n      const container = document.getElementById('outerContainer');\n      if (container) {\n        const width = container.clientWidth;\n        resizeUpTo900px(width);\n        resizeUpTo840px(width);\n        resizeUpTo770px(container, width);\n        resizeUpTo700px(container, width);\n        resizeUpTo640px(container, width);\n        resizeUpTo535px(width);\n      }\n    }\n  }\n\n  @HostListener('contextmenu')\n  public onContextMenu(): boolean {\n    return this.contextMenuAllowed;\n  }\n}\n","function rtl(): boolean {\n  let element = document.getElementsByClassName('toolbar')[0] as HTMLElement;\n  while (element) {\n    if (element.dir !== '') {\n      return element.dir === 'rtl';\n    }\n    if (!element.parentElement) {\n      break;\n    }\n    element = element.parentElement;\n  }\n  return false;\n}\n\nexport function resizeUpTo535px(width: number) {\n  const tinyElement = document.getElementById('scaleSelectContainer');\n  const tiny = tinyElement as HTMLElement;\n  if (width < 535) {\n    // not perfect, but good first approximation\n    tiny.classList.add('hidden');\n  } else {\n    tiny.classList.remove('hidden');\n  }\n}\n\nexport function resizeUpTo640px(container: HTMLElement, width: number) {\n  const smallElements = container.getElementsByClassName('hiddenSmallView');\n  for (let i = 0; i < smallElements.length; i++) {\n    const elt = smallElements[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n  const visibleSmallViewElements = container.getElementsByClassName('visibleSmallView');\n  for (let i = 0; i < visibleSmallViewElements.length; i++) {\n    const elt = visibleSmallViewElements[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n  const toolbarButtonSpacer = container.getElementsByClassName('toolbarButtonSpacer');\n  for (let i = 0; i < toolbarButtonSpacer.length; i++) {\n    const elt = toolbarButtonSpacer[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('below640px');\n    } else {\n      elt.classList.remove('below640px');\n    }\n  }\n  const findbar = document.getElementsByClassName('findbar');\n  for (let i = 0; i < findbar.length; i++) {\n    const elt = findbar[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('below640px');\n    } else {\n      elt.classList.remove('below640px');\n    }\n  }\n}\n\nexport function resizeUpTo700px(container: HTMLElement, width: number) {\n  const mediumElements = container.getElementsByClassName('hiddenMediumView');\n  for (let i = 0; i < mediumElements.length; i++) {\n    const elt = mediumElements[i] as HTMLElement;\n    if (width < 700) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n  // #103\n  const visibleMediumElements = container.getElementsByClassName('visibleMediumView');\n  for (let i = 0; i < visibleMediumElements.length; i++) {\n    const elt = visibleMediumElements[i] as HTMLElement;\n    if (width < 700) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n}\n\nexport function resizeUpTo900px(width: number): void {\n  const elt = document.getElementById('toolbarViewerMiddle');\n  if (elt) {\n    if (width < 900) {\n      elt.classList.add('toolbarViewerMiddleBelow900px');\n    } else {\n      elt.classList.remove('toolbarViewerMiddleBelow900px');\n    }\n  }\n}\n\nexport function resizeUpTo840px(width: number) {\n  const elt = document.getElementsByClassName('zoom')[0];\n  if (elt) {\n    if (width < 840) {\n      elt.classList.add('below840px');\n    } else {\n      elt.classList.remove('below840px');\n    }\n  }\n}\n\nexport function resizeUpTo770px(container: HTMLElement, width: number) {\n  let elt = document.getElementsByClassName('zoom')[0];\n  if (elt) {\n    if (width < 770) {\n      elt.classList.add('below770px');\n    } else {\n      elt.classList.remove('below770px');\n    }\n  }\n  const hiddenLargeElements = container.getElementsByClassName('hiddenLargeView');\n  for (let i = 0; i < hiddenLargeElements.length; i++) {\n    elt = hiddenLargeElements[i] as HTMLElement;\n    if (width < 770) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n\n  const visibleLargeElements = container.getElementsByClassName('visibleLargeView');\n  for (let i = 0; i < visibleLargeElements.length; i++) {\n    elt = visibleLargeElements[i] as HTMLElement;\n    if (width < 770) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n}\n\nexport function removeDynamicCSS() {\n  const classesToRemove = ['toolbarViewerMiddleBelow900px', 'below840px', 'below770px', 'below700px', 'below640px'];\n  const elt = document.getElementsByClassName('zoom')[0];\n  if (elt) {\n    classesToRemove.forEach(c => {\n      const parents = elt.getElementsByClassName(c);\n      if (parents) {\n        for (let i = 0; i < parents.length; i++) {\n          const element = parents.item(i);\n          if (element) {\n            element.classList.remove(c);\n          }\n        }\n      }\n    });\n\n    const tinyElement = document.getElementById('scaleSelectContainer');\n    if (tinyElement) {\n      tinyElement.classList.remove('hidden');\n    }\n    const classesToRemoveHiddenFrom = [\n      'hiddenSmallView',\n      'visibleSmallView',\n      'hiddenMediumView',\n      'visibleMediumView',\n      'hiddenLargeView',\n      'visibleLargeView'\n    ];\n    classesToRemoveHiddenFrom.forEach(c => {\n      const parents = elt.getElementsByClassName(c);\n      if (parents) {\n        for (let i = 0; i < parents.length; i++) {\n          const element = parents.item(i);\n          if (element) {\n            element.classList.remove('hidden');\n          }\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxExtendedPdfViewerService {\n  constructor() {}\n\n  public find(text: string): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call find() later.\");\n      return false;\n    } else {\n      const inputField = document.getElementById('findInput');\n      if (inputField) {\n        inputField.setAttribute('value', text);\n        inputField.dispatchEvent(new Event('input'));\n        return true;\n      } else {\n        // tslint:disable-next-line:quotemark\n        console.error(\"Unexpected error: the input field used to search isn't part of the DOM.\");\n        return false;\n      }\n    }\n  }\n\n  public findNext(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findNext() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findNext');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n\n  public findPrevious(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findPrevious() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findPrevious');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\nimport { NgxExtendedPdfViewerService } from './ngx-extended-pdf-viewer.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxExtendedPdfViewerComponent],\n  providers: [NgxExtendedPdfViewerService],\n  exports: [NgxExtendedPdfViewerComponent]\n})\nexport class NgxExtendedPdfViewerModule {}\n"]}